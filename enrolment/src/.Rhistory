enrolment.path <- "C:\\Users\\johnc\\Documents\\Projects\\Data\\singapore\\enrolment\\2017\\main.csv"
enrolment <- read.csv(tax.path, header = T, sep = ',', stringsAsFactors = T)
enrolment.path <- "C:\\Users\\johnc\\Documents\\Projects\\Data\\singapore\\enrolment\\2017\\main.csv"
enrolment <- read.csv(enrolment.path, header = T, sep = ',', stringsAsFactors = T)
enrolment.path <- "C:\\Users\\johnc\\Documents\\Projects\\Data\\singapore\\enrolment\\2017\\main.csv"
enrolment <- read.csv(enrolment.path, header = T, sep = ',', stringsAsFactors = T)
enrolment
require(magrittr)
require(stringr)
require(magrittr)
require(directlabels)
require(grid)
require(scales)
require(dplyr)
require(reshape2)
require(magrittr)
require(stringr)
require(magrittr)
require(directlabels)
require(grid)
require(scales)
require(dplyr)
require(reshape2)
enrolment.path <- "C:\\Users\\johnc\\Documents\\Projects\\Data\\singapore\\enrolment\\2017\\main.csv"
enrolment <- read.csv(enrolment.path, header = T, sep = ',', stringsAsFactors = T)
sex
View(enrolment)
View(enrolment)
source('~/Projects/Python/singapore_da/enrolment/src/main.R', echo=TRUE)
# 1. The Sex provided are in MF and F, we should replace MF's with M
enrolment %>%
group_by(sex) %>%
mutate(M = MF - `F`)
# 1. The Sex provided are in MF and F, we should replace MF's with M
enrolment %>%
group_by(sex) %>%
summarise(d=sex[1]-sex[2])
# 1. The Sex provided are in MF and F, we should replace MF's with M
enrolment %>%
group_by(sex) %>%
summarise(MInt=Intake[1]-Intake[2])
# 1. The Sex provided are in MF and F, we should replace MF's with M
enrolment %>%
group_by(sex) %>%
summarise(MInt=intake[1]-intake[2])
# 1. The Sex provided are in MF and F, we should replace MF's with M
enrolment[enrolment$sex == "MF"]
# 1. The Sex provided are in MF and F, we should replace MF's with M
enrolment[sex == "MF"]
# 1. The Sex provided are in MF and F, we should replace MF's with M
subset(enrolment, sex == "MF")
# 1. The Sex provided are in MF and F, we should replace MF's with M
length(subset(enrolment, sex == "MF"))
nrow(subset(enrolment, sex == "MF"))
# 1. The Sex provided are in MF and F, we should replace MF's with M
nrow(subset(enrolment, sex == "MF"))
nrow(subset(enrolment, sex == "F"))
enrolment.M <- enrolment.MF - enrolment.F
# 1. The Sex provided are in MF and F, we should replace MF's with M
enrolment.MF <- nrow(subset(enrolment, sex == "MF"))
enrolment.F <- nrow(subset(enrolment, sex == "F"))
enrolment.M <- enrolment.MF - enrolment.F
# 1. The Sex provided are in MF and F, we should replace MF's with M
enrolment.MF <- subset(enrolment, sex == "MF")
enrolment.F <- subset(enrolment, sex == "F")
enrolment.M <- enrolment.MF - enrolment.F
View(enrolment.M)
enrolment.MF %<>%
mutate(year = year*2)
enrolment.F <- subset(enrolment, sex == "F")
enrolment.M <- enrolment.MF - enrolment.F
.enrolment.columns <- c("intake", "enrolment", "graduates")
enrolment.M <- enrolment.MF[,.enrolment.columns] - enrolment.F[,.enrolment.columns]
View(enrolment.M)
View(enrolment.MF)
enrolment.M <- enrolment.MF[,4:6] - enrolment.F[,4:6]
enrolment.M %>%
cbind(enrolment.F[,1:3])
enrolment.M %>%
cbind(enrolment.F[,1:3])
enrolment.M %<>%
cbind(enrolment.F[,1:3])
enrolment.M <- enrolment.F[,1:3] %>%
cbind(enrolment.M)
rovided are in MF and F, we should replace MF's with M
enrolment.MF <- subset(enrolment, sex == "MF") # We extract MF
enrolment.F <- subset(enrolment, sex == "F")
.enrolment.numeric.columns <- c("intake", "enrolment", "graduates")
enrolment.M <- enrolment.MF[,4:6] - enrolment.F[,4:6]
enrolment.M <- enrolment.F[,1:3] %>%
cbind(enrolment.M)
remove(.enrolment.columns)
bset(enrolment, sex == "MF") # We extract MF
enrolment.F <- subset(enrolment, sex == "F")
.enrolment.numeric.columns <- c("intake", "enrolment", "graduates")
enrolment.M <- enrolment.MF[,4:6] - enrolment.F[,4:6]
enrolment.M <- enrolment.F[,1:3] %>%
cbind(enrolment.M) %>%
mutate(sex = "M")
remove(.enrolment.
remove(.enrolment.columns)
View(enrolment)
remove(enrolment)
# Join back .M and .F
enrolment <- enrolment.M %>%
rbind(enrolment.F)
View(enrolment)
require(ggplot2)
stack(enrolment)
getOption("max.print")
getOption("max.print") <- 50
options("max.print")
options("max.print") <- 100
options(max.print = 1--)
options(max.print = 100)
stack(enrolment)
enrolment
stack(enrolment)
stack(enrolment,select = c(year,sex,course))
stack(enrolment,select = c("year","sex","course"))
enrolment %>%
melt(value.name = "persons", id.vars = 4:6)
enrolment %>%
melt(value.name = "persons", id.vars = 1:3)
enrolment %>%
melt(value.name = "persons", id.vars = 1:3, var.name = "test")
enrolment %>%
melt(value.name = "persons", id.vars = 1:3, variable.name = "test")
?melt
ggplot(enrolment) +
aes(x = year,
y = persons,
colour = type) +
geom_point() +
geom_line()
enrolment %<>%
melt(value.name = "persons",
variable.name = "type",
id.vars = 1:3)
ggplot(enrolment) +
aes(x = year,
y = persons,
colour = type) +
geom_point() +
geom_line()
source('~/Projects/Python/singapore_da/enrolment/src/main.R', echo=TRUE)
enrolment.sum %<>%
group_by(year) %>%
summarise(d = sum(persons))
enrolment.sum <- enrolment %>%
group_by(year) %>%
summarise(d = sum(persons))
View(enrolment.sum)
enrolment.sum <- enrolment %>%
group_by(year, type) %>%
summarise(d = sum(persons))
ggplot(enrolment.sum) +
aes(x = year,
y = persons,
colour = type) +
geom_point() +
geom_line()
enrolment.sum <- enrolment %>%
group_by(year, type) %>%
summarise(persons = sum(persons))
ggplot(enrolment.sum) +
aes(x = year,
y = persons,
colour = type) +
geom_point() +
geom_line()
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line()
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line(aes(group = type))
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line(aes(group = type)) +
geom_dl(
aes(label = persons),
method = list(last.bumpup,
cex = 1)
)
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line(aes(group = type)) +
geom_dl(
aes(label = persons),
method = list(last.bumpup,
cex = 1,
dl.trans(x=x+0.2))
)
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line(aes(group = type)) +
geom_dl(
aes(label = sprintf("%sK", round(persons, digits = 0))),
method = list(last.bumpup,
cex = 1,
dl.trans(x=x+0.2))
)
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line(aes(group = type)) +
geom_dl(
aes(label = sprintf("%sK", round(persons/1000, digits = 0))),
method = list(last.bumpup,
cex = 1,
dl.trans(x=x+0.2))
)
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line(aes(group = type)) +
geom_dl(
aes(label = sprintf("%sK", round(persons/1000, digits = 0))),
method = list(last.bumpup,
cex =0.7,
dl.trans(x=x+0.2))
)
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line(aes(group = type)) +
geom_dl(
aes(label = sprintf("%sK", round(persons/1000, digits = 0))),
method = list(cex =0.7,
dl.trans(x=x+0.2))
)
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line(aes(group = type)) +
geom_dl(
aes(label = sprintf("%sK", round(persons/1000, digits = 0))),
method = list(cex =0.7,
dl.trans(x=x+0.2, y=y-0.5))
)
ggplot(enrolment.sum) +
aes(x = factor(year),
y = persons,
colour = type) +
geom_point() +
geom_line(aes(group = type)) +
geom_dl(
aes(label = sprintf("%sK", round(persons/1000, digits = 0))),
method = list(cex =0.7,
dl.trans(x=x+0.2, y=y-0.2))
)
source('~/Projects/Python/singapore_da/enrolment/src/main.R')
