# Save Plot
ggsave("tax_plot.png",width = 23, height = 15, dpi = 100, units="cm")
# Select important columns only
tax.resident.grw %<>%
select(year_of_assessment,
assessed_income_group,
growth)
tax.path <- "C:\\Users\\johnc\\Documents\\Projects\\Data\\singapore\\tax\\main.csv"
tax <- read.csv(tax.path, header = T, sep = ',', stringsAsFactors = T)
# Sort Levels correctly
{
tax.levels <- data.frame(levels(tax$assessed_income_group)) # Access Levels
tax.levels.spl <-
tax.levels$levels.tax.assessed_income_group. %>%
str_split_fixed(pattern = " ", n = 3) # Split Levels by space
tax.levels.spl <- tax.levels.spl[,1] # Grab first col
tax.levels.spl %<>%
gsub(pattern = ",", replacement = "") %>%
as.numeric # Replace commas, then map to numeric. e.g. "1,000" -> "1000" -> 1000
tax.levels <- cbind(tax.levels, tax.levels.spl) # Join both df to sort
tax.levels <- tax.levels[order(tax.levels$tax.levels.spl),] # Sort by numeric
tax$assessed_income_group %<>%  # Apply to main df
factor(levels = paste(tax.levels$levels.tax.assessed_income_group.))
}
# Drop all non-Tax residents
tax.resident = subset(tax, tax$resident_type == "Tax Resident")
# Draw Plot
{
ggplot(tax.resident,
aes(x = factor(year_of_assessment), # We use factor to force all x labels
number_of_taxpayers,
colour = assessed_income_group) # Color by Levels
) +
geom_point() + # Add Points
geom_line(aes(group = assessed_income_group)) + # Add Lines
ylab("Number of Tax Payers (*1000)") + # Y Label
xlab("Year of Assessment") + # X Label
ggtitle(label = "Number of Taxpayers By Income Groups",
subtitle = "From \"Taxable Individuals by Assessable Income Group, Annual\", data.gov.sg") +
scale_y_continuous(labels = function(y)y/1000.0) + # Scale Y Axis by /1000
scale_x_discrete(expand = expand_scale(add = c(0.3,5))) +
theme(legend.position = "none", # Remove Legends
plot.margin = unit(c(1,2,1,2),"cm")
) +
geom_dl( # Draw Labels
aes(label = sprintf("$%s/y", assessed_income_group)),
method = list(last.bumpup,
cex = 1,
dl.trans(x=x+0.2)
))
}
# Save Plot
ggsave("tax_plot.png",width = 23, height = 15, dpi = 100, units="cm")
# Select important columns only
tax.resident.grw %<>%
select(year_of_assessment,
assessed_income_group,
growth)
# Calculate Growth
tax.resident.grw <- ddply(tax.resident,"assessed_income_group",transform,
growth=c(NA, exp(diff(log(number_of_taxpayers)))-1))
# Select important columns only
tax.resident.grw %<>%
select(year_of_assessment,
assessed_income_group,
growth)
# Replace NA with 0
tax.resident.grw[is.na(tax.resident.grw)] <- 0
# Calculate Growth
tax.resident.grw <- ddply(tax.resident,"assessed_income_group",transform,
growth=c(NA, exp(diff(log(number_of_taxpayers)))-1))
# Create animated growth after time gif
if (!file.exists("growth.gif")) {
p <- ggplot(tax.resident.grw) + # Create bar graph
aes(x=assessed_income_group, y=growth) +
geom_bar(stat = "identity") +
xlab("Income Group") +
ggtitle("% Change in Growth after time") +
coord_flip()
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 20, duration = 15)
anim_save("growth.gif")
}
# Create animated growth after time gif
if (!file.exists("img/growth.gif")) {
require(gganimate)
p <- ggplot(tax.resident.grw) + # Create bar graph
aes(x=assessed_income_group, y=growth) +
geom_bar(stat = "identity") +
xlab("Income Group") +
ggtitle("% Change in Growth after time") +
coord_flip()
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 20, duration = 15)
anim_save("growth.gif")
}
source('~/Projects/Python/singapore_da/tax/src/main.R', echo=TRUE)
ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=growth) +
geom_bar(stat = "identity") +
xlab("Income Group") +
ggtitle("% Change in Growth after time") +
ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=growth) +
geom_bar(stat = "identity") +
xlab("Income Group") +
ggtitle("% Change in Growth after time")
ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers) +
geom_bar(stat = "identity") +
xlab("Income Group") +
ggtitle("% Change in Growth after time")
# Create distribution only for 2017
if (!file.exists("img/2017.png")) {
ggplot(subset(tax.resident, tax.resident$year_of_assessment == 2017)) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(labels = number_of_taxpayers) +
ggtitle("% Change in Growth after time")
}
ggplot(subset(tax.resident, tax.resident$year_of_assessment == 2017)) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(labels = number_of_taxpayers) +
ggtitle("% Change in Growth after time")
ggplot(subset(tax.resident, tax.resident$year_of_assessment == 2017)) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(labels = "number_of_taxpayers") +
ggtitle("% Change in Growth after time")
ggplot(subset(tax.resident, tax.resident$year_of_assessment == 2017)) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = "number_of_taxpayers")) +
ggtitle("% Change in Growth after time")
ggplot(subset(tax.resident, tax.resident$year_of_assessment == 2017)) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = number_of_taxpayers)) +
ggtitle("% Change in Growth after time")
ggplot(subset(tax.resident, tax.resident$year_of_assessment == 2017)) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = percent(number_of_taxpayers / sum(number_of_taxpayers)))) +
ggtitle("% Change in Growth after time")
ggplot(subset(tax.resident)) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = percent(number_of_taxpayers / sum(number_of_taxpayers)))) +
ggtitle("Income Group Distribution in 2017")
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 10, duration = 15)
anim_save("2017.gif")
p <- ggplot(subset(tax.resident)) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = percent(number_of_taxpayers / sum(number_of_taxpayers)))) +
ggtitle("Income Group Distribution in 2017")
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 10, duration = 15)
anim_save("2017.gif")
p <- ggplot(subset(tax.resident)) + # Create bar graph
aes(x=assessed_income_group, y=number_of_taxpayers / sum(number_of_taxpayers)) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = percent(number_of_taxpayers / sum(number_of_taxpayers)))) +
ggtitle("Income Group Distribution in 2017")
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 10, duration = 5)
anim_save("2017.gif")
group_by(tax.resident)
tax.resident %>%
group_by(year_of_assessment) %>%
mutate(dist = number_of_taxpayers / sum(number_of_taxpayers))
<- tax.resident %>%
group_by(year_of_assessment) %>%
mutate(dist = number_of_taxpayers / sum(number_of_taxpayers))
View (d)
d <- tax.resident %>%
group_by(year_of_assessment) %>%
mutate(dist = number_of_taxpayers / sum(number_of_taxpayers))
View (d)
d <- tax.resident %>%
group_by(year_of_assessment) %>%
mutate(dist = round(number_of_taxpayers / sum(number_of_taxpayers) * 100, digits = 2))
View (d)
d <- tax.resident %>%
group_by(year_of_assessment) %>%
mutate(dist = round(number_of_taxpayers / summarise(sum(number_of_taxpayers)) * 100, digits = 2))
d <- tax.resident %>%
group_by(year_of_assessment) %>%
summarise(dist = sum(number_of_taxpayers))
View (d)
d <- tax.resident %>%
group_by(year_of_assessment)
detach("package:plyr", unload = TRUE)
library(plyr)
detach("package:dplyr", unload = TRUE)
library(dplyr)
d <- tax.resident %>%
group_by(year_of_assessment) %>%
summarise(dist = sum(number_of_taxpayers))
View (d)
d <- tax.resident %>%
group_by(year_of_assessment) %>%
summarise(dist = number_of_taxpayers / sum(number_of_taxpayers))
View (d)
d <- tax.resident %>%
group_by(year_of_assessment) %>%
mutate(dist = number_of_taxpayers / sum(number_of_taxpayers))
View (d)
d <- tax.resident %>%
group_by(year_of_assessment) %>%
mutate(dist = round(number_of_taxpayers / sum(number_of_taxpayers) * 100, digits = 2))
View (d)
d <- tax.resident %>%
group_by(year_of_assessment) %>%
mutate(dist = round(number_of_taxpayers / sum(number_of_taxpayers) * 100, digits = 2))
# Create distribution only for 2017
if (!file.exists("img/2017.png")) {
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = dist)) +
ggtitle("Income Group Distribution in 2017")
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = dist)) +
ggtitle("Income Group Distribution in 2017")
ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = dist)) +
ggtitle("Income Group Distribution in 2017")
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = dist)) +
ggtitle("Income Group Distribution in 2017")
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 10, duration = 5)
anim_save("2017.gif")
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = dist)) +
ggtitle("Income Group Distribution in 2017")
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = dist)) +
ggtitle("Income Group Distribution in 2017")
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 10, duration = 5)
anim_save("2017.gif")
tax.resident %<>%
group_by(year_of_assessment) %>%
mutate(dist = round(number_of_taxpayers / sum(number_of_taxpayers) * 100, digits = 2))
# Create distribution only for 2017
if (!file.exists("img/2017.png")) {
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = dist)) +
ggtitle("Income Group Distribution in 2017")
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 10, duration = 5)
anim_save("2017.gif")
}
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 2) +
ggtitle("Income Group Distribution after time")
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = -1) +
ggtitle("Income Group Distribution after time")
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time")
p
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 10, duration = 5)
anim_save("2017.gif")
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time")
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 20, duration = 15)
anim_save("img/dist.gif")
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time")
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 15, duration = 12)
anim_save("img/dist.gif")
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90))
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time") +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time") +
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90))+
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time") +
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time")
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x=assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = sub(" .*", "", axis.text.x)) +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time")
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x = sub(" .*", "", assessed_income_group), y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time")
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x = assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time")
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x = assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
ggtitle("Income Group Distribution after time")
p
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 15, duration = 12)
anim_save("img/dist.gif")
p <- ggplot(tax.resident) + # Create bar graph
aes(x = assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
ylab("Distribution of Taxpayers") +
ggtitle("Income Group Distribution after time") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1) +
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x = assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
ylab("Distribution of Taxpayers") +
ggtitle("Income Group Distribution after time") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1)
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x = assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
ylab("Distribution of Taxpayers") +
ggtitle("Income Group Distribution after from 2004 to 2017") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1)
p
p <- ggplot(tax.resident) + # Create bar graph
aes(x = assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
ylab("Distribution of Taxpayers") +
ggtitle("Income Group Distribution after from 2004 to 2017") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1)
p
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}")
animate(anim, fps = 15, duration = 12)
anim_save("img/dist.gif")
p <- ggplot(tax.resident) + # Create bar graph
aes(x = assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
ylab("Distribution of Taxpayers") +
ggtitle("Income Group Distribution after from 2004 to 2017") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1)
p
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}",
subtitle = "Income Group Distribution after from 2004 to 2017")
animate(anim, fps = 15, duration = 12)
anim_save("img/dist.gif")
p <- ggplot(tax.resident) + # Create bar graph
aes(x = assessed_income_group, y=dist) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Income Group") +
ylab("Distribution of Taxpayers") +
ggtitle("Income Group Distribution from 2004 to 2017") +
geom_text(aes(label = percent(dist/100)), nudge_y = 1)
p
anim <- p +
transition_time(time = year_of_assessment) +
labs(title = "Year: {frame_time}",
subtitle = "Income Group Distribution from 2004 to 2017")
animate(anim, fps = 15, duration = 12)
anim_save("img/dist.gif")
tinytex::install_tinytex()
tinytex:::is_tinytex()
reticulate::repl_python()
import pdfkit
pdfkit.from_file("rmd.html", "rmd.pdf")
file('rmd.pdf', 'w').write(pdf)
import weasyprint
pdf = weasyprint.HTML('rmd.html').write_pdf()
file('rmd.pdf', 'w').write(pdf)
import weasyprint
import weasyprint
import weasyprint
pdf = pdfkit.from_file('rmd.html', 'rmd.pdf')
import pdfkit
import pdfkit
pdf = pdfkit.from_file('rmd.html', 'rmd.pdf')
import pdfkit
pdf = pdfkit.from_file('rmd.html', 'rmd.pdf')
import pdfkit
pdf = pdfkit.from_file('rmd.html', 'rmd.pdf')
import pdfkit
pdf = pdfkit.from_file('rmd.html', 'rmd.pdf')
import wea
import pdfkit
pdf = pdfkit.from_file('rmd.html', 'rmd.pdf')
pdf = pdfkit.from_file('rmd.html', 'rmd.pdf')
import pdfkit
pdf = pdfkit.from_file('rmd.html', 'rmd.pdf')
