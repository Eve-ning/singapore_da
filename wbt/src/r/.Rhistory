span = 0.5)))
source("libs.R") # Load Libraries
source("reader.R") # Read Source
source("preview.R") # Grab preview functions
wbt.fn.by.year <- function() {
wbt.year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
plot(predict(loess(values ~ dates,
data = wbt.year.mean,
span = 0.5)))
}
wbt.fn.by.year(
)
source("libs.R") # Load Libraries
wbt.fn.by.year <- function() {
# Aggregate by Year
year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
# Create a local regression model
loess.mdl <- loess(values ~ dates,
data = year.mean,
span = 0.5)
# Predict the model
loess.pred <- predict(loess)
# CBind with original df
year.mean <- cbind(year.mean, loess.pred)
ggplot(year.mean) +
aes(x = dates,
y = pred) +
geom_point() +
geom_line()
}
wbt.fn.by.year(
)
wbt.fn.by.year <- function() {
# Aggregate by Year
year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
# Create a local regression model
loess.mdl <- predict(
loess(values ~ dates,
data = year.mean,
span = 0.5)
)
# CBind with original df
year.mean <- cbind(year.mean, loess.mdl)
ggplot(year.mean) +
aes(x = dates,
y = pred)
geom_point() +
geom_line()
plot(predict(loess(values ~ dates,
data = wbt.year.mean,
span = 0.5)))
}
source('~/Projects/repos/singapore_da/wbt/main.R', echo=TRUE)
wbt.fn.by.year(
)
wbt.fn.by.year <- function() {
# Aggregate by Year
year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
# Create a local regression model
loess.mdl <- predict(
loess(values ~ dates,
data = year.mean,
span = 0.5)
)
# CBind with original df
year.mean <- cbind(year.mean, loess.mdl)
ggplot(year.mean) +
aes(x = dates,
y = pred) +
geom_point() +
geom_line()
plot(predict(loess(values ~ dates,
data = wbt.year.mean,
span = 0.5)))
}
wbt.fn.by.year(
)
wbt.fn.by.year <- function() {
# Aggregate by Year
year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
# Create a local regression model
loess.mdl <- predict(
loess(values ~ dates,
data = year.mean,
span = 0.5)
)
# CBind with original df
year.mean <- cbind(year.mean, loess.mdl)
ggplot(year.mean) +
aes(x = dates,
y = pred) +
geom_point() +
geom_line()
plot(predict(loess(values ~ dates,
data = year.mean,
span = 0.5)))
}
wbt.fn.by.year(
)
# Aggregate by Year
year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
# Create a local regression model
loess.mdl <- predict(
loess(values ~ dates,
data = year.mean,
span = 0.5)
)
# CBind with original df
year.mean <- cbind(year.mean, loess.mdl)
ggplot(year.mean) +
aes(x = dates,
y = pred) +
geom_point() +
geom_line()
plot(predict(loess(values ~ dates,
data = year.mean,
span = 0.5)))
View(year.mean)
# Aggregate by Year
year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
# Create a local regression model
loess.mdl <- predict(
loess(values ~ dates,
data = year.mean,
span = 0.5)
)
# CBind with original df
year.mean <- cbind(year.mean, loess.mdl)
ggplot(year.mean) +
aes(x = dates,
y = loess.mdl) +
geom_point() +
geom_line()
plot(predict(loess(values ~ dates,
data = year.mean,
span = 0.5)))
wbt.fn.by.year <- function() {
# Aggregate by Year
year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = year.mean,
span = 0.5)
)
# CBind with original df
year.mean <- cbind(year.mean,
loess.mdl)
# Create Plot
ggplot(year.mean) +
aes(x = as.Date(dates), # Coerce dates from numeric to Date
y = pred) +
geom_point() +
geom_line()
}
wbt.fn.by.year()
wbt.fn.by.month <- function() {
# Aggregate by Year
month.mean <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = wbt,
mean)
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = month.mean,
span = 0.5)
)
# CBind with original df
month.mean <- cbind(month.mean,
loess.mdl)
# Create Plot
ggplot(month.mean) +
aes(x = as.Date(dates), # Coerce dates from numeric to Date
y = pred) +
geom_point() +
geom_line()
return(month.mean)
}
wbt.fn.by.month()
rm(loess.mdl)
wbt.fn.by.year <- function() {
# Aggregate by Year
year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = year.mean,
span = 0.5)
)
# CBind with original df
year.mean <- cbind(year.mean,
pred)
# Create Plot
ggplot(year.mean) +
aes(x = as.Date(dates), # Coerce dates from numeric to Date
y = pred) +
geom_point() +
geom_line()
return(year.mean)
}
wbt.fn.by.month <- function() {
# Aggregate by Month
month.mean <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = wbt,
mean)
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = month.mean,
span = 0.5)
)
# CBind with original df
month.mean <- cbind(month.mean,
pred)
# Create Plot
ggplot(month.mean) +
aes(x = as.Date(dates), # Coerce dates from numeric to Date
y = pred) +
geom_point() +
geom_line()
return(month.mean)
}
wbt.fn.by.month()
wbt.fn.by.month()
wbt.fn.by.month <- function() {
# Aggregate by Month
month.mean <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = wbt,
mean)
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = month.mean,
span = 0.5)
)
# CBind with original df
month.mean <- cbind(month.mean,
pred)
# Create Plot
ggplot(month.mean) +
aes(x = as.Date(dates), # Coerce dates from numeric to Date
y = pred) +
geom_point() +
geom_line()
}
wbt.fn.by.month()
}
wbt.fn.by.month <- function() {
# Aggregate by Month
month.mean <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = wbt,
mean)
'
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = month.mean,
span = 0.5)
)
# CBind with original df
month.mean <- cbind(month.mean,
pred)'
# Create Plot
ggplot(month.mean) +
aes(x = as.Date(dates), # Coerce dates from numeric to Date
y = values) +
geom_point() +
geom_line()
}
wbt.fn.by.month()
wbt.fn.by.year.loess <- function() {
# Aggregate by Year
year.mean <-
aggregate(cbind(values, dates) ~ dates.year,
data = wbt,
mean)
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = year.mean,
span = 0.5)
)
# CBind with original df
year.mean <- cbind(year.mean,
pred)
# Create Plot
ggplot(year.mean) +
aes(x = as.Date(dates), # Coerce dates from numeric to Date
y = pred) +
geom_point() +
geom_line()
return(year.mean)
}
wbt.fn.by.year.loess()
View(wbt.fn.by.month)
wbt.by.month <- wbt.fn.by.month()
View(wbt.by.month)
# Aggregate by Month
month.mean <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = wbt,
mean)
wbt.by.month <- wbt.fn.by.month()
View(month.mean)
# Aggregate by Month
month.mean <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = wbt,
mean)
return(month.mean)
wbt.by.month <- wbt.fn.by.month()
wbt.by.month <- wbt.fn.by.month()
View(wbt.by.month)
wbt.by.month = wbt.fn.by.month()
return (month.mean)
wbt.fn.by.month <- function() {
# Aggregate by Month
month.mean <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = wbt,
mean)
return (month.mean)
}
wbt.by.month = wbt.fn.by.month()
wbt.by.month = wbt.fn.by.month()
wbt.by.month.loess = wbt.fn.by.month.loess()
wbt.fn.by.month.loess <- function() {
# Aggregate by Month
month.mean <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = wbt,
mean)
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = month.mean,
span = 0.5)
)
# CBind with original df
month.mean <- cbind(month.mean,
pred)
return(month.mean)
}
wbt.by.month.loess = wbt.fn.by.month.loess()
View(wbt.by.month.loess)
wbt.by.month.loess$delta =
wbt.by.month.loess$values -
wbt.by.month.loess$pred
ggplot(wbt.by.month.loess) +
aes(x = as.Date(dates),
y = delta) +
geom_point() +
geom_line()
source("libs.R") # Load Libraries
source("reader.R") # Read Source
source("preview.R") # Grab preview functions
wbt.delta <- wbt.fn.month.loess()
wbt.fn.month.loess <- function() {
# Aggregate by Month
month.mean <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = wbt,
mean)
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = month.mean,
span = 0.5)
)
# CBind with original df
month.mean <- cbind(month.mean,
pred)
# Grab delta
month.mean$delta = month.mean$values - month.mean$pred
return(month.mean)
}
wbt.delta <- wbt.fn.month.loess()
ggplot(wbt.delta) +
aes(x = as.Date(dates),
y = delta) +
geom_point() +
geom_line()
ggplot(wbt.delta) +
aes(x = as.Date(dates),
y = values) +
geom_point() +
geom_line()
source("modelling.R") # This will grab all the modelling functions
source("libs.R") # Load Libraries
source("reader.R") # Read Source
source("preview.R") # Grab preview functions
source("modelling.R") # This will grab all the modelling functions
wbt <- wbt.normalize(wbt)
# This creates a loess model of the data
wbt.normalize <- function(df) {
# Aggregate by Month
df <-
aggregate(cbind(values, dates) ~ dates.year + dates.month,
data = df,
mean)
# Create a local regression model
pred <- predict(
loess(values ~ dates,
data = df,
span = 0.5)
)
# CBind with original df
df <- cbind(df, pred)
# Grab delta
df$delta = df$values - df$pred
return(df)
}
wbt <- wbt.normalize(wbt)
View(wbt)
source("plotting.R")
wbt.plot.loess.comp()
wbt.plot.loess.comp(wbt)
ggplot(wbt) +
aes(x = as.Date(dates),
y = values) +
geom_line() +
geom_line(aes(x = as.Date(dates),
y = pred), label = "test")
ggplot(wbt) +
aes(x = as.Date(dates),
y = values) +
geom_line() +
geom_line(aes(x = as.Date(dates),
y = pred,
label = "test"))
wbt.plot.loess.comp <- function(wbt) {
ggplot(wbt) +
aes(x = as.Date(dates),
y = values) +
geom_line(color = 'blue') +
geom_line(aes(x = as.Date(dates),
y = pred,
color = 'red',
linetype = 'dotted'))
}
wbt.plot.loess.comp(wbt)
wbt.plot.loess.comp <- function(wbt) {
ggplot(wbt) +
aes(x = as.Date(dates),
y = values) +
geom_line(color = 'blue',
legend = 'original') +
geom_line(aes(x = as.Date(dates),
y = pred,
legend = "loess"),
color = 'red',
linetype = 'dotted')
}
wbt.plot.loess.comp(wbt)
wbt.plot.loess.comp <- function(wbt) {
ggplot(wbt) +
aes(x = as.Date(dates),
y = values) +
geom_line(color = 'blue',
legend = 'original') +
geom_line(aes(x = as.Date(dates),
y = pred),
color = 'red',
linetype = 'dotted',
size = 1)
}
wbt.plot.loess.comp(wbt)
source("plotting.R")
wbt.plot.loess.comp(wbt)
wbt.plot.delta(wbt)
source("plotting.R")
wbt.plot.delta(wbt)
wbt.plot.loess.comp(wbt)
source("libs.R") # Load Libraries
source("reader.R") # Read Source
source("preview.R") # Grab preview functions
source("modelling.R") # This will grab all the modelling functions
wbt <- wbt.normalize(wbt)
source("plotting.R")
wbt.plot.loess.comp(wbt)
wbt.plot.delta(wbt)
